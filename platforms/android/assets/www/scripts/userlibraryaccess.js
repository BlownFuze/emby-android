define(["jQuery"],function(e){function l(l,n,i){var c="";c+='<fieldset data-role="controlgroup">',c+="<legend>"+Globalize.translate("HeaderLibraries")+"</legend>";for(var a=0,t=i.length;t>a;a++){var r=i[a],s="mediaFolder"+a,o=n.Policy.EnableAllFolders||-1!=n.Policy.EnabledFolders.indexOf(r.Id),d=o?' checked="checked"':"";c+='<input class="chkFolder" data-id="'+r.Id+'" type="checkbox" id="'+s+'"'+d+" />",c+='<label for="'+s+'">'+r.Name+"</label>"}c+="</fieldset>",e(".folderAccess",l).html(c).trigger("create"),e("#chkEnableAllFolders",l).checked(n.Policy.EnableAllFolders).checkboxradio("refresh").trigger("change")}function n(l,n,i){var c="";c+='<fieldset data-role="controlgroup">',c+="<legend>"+Globalize.translate("HeaderChannels")+"</legend>";for(var a=0,t=i.length;t>a;a++){var r=i[a],s="channels"+a,o=n.Policy.EnableAllChannels||-1!=n.Policy.EnabledChannels.indexOf(r.Id),d=o?' checked="checked"':"";c+='<input class="chkChannel" data-id="'+r.Id+'" type="checkbox" id="'+s+'"'+d+" />",c+='<label for="'+s+'">'+r.Name+"</label>"}c+="</fieldset>",e(".channelAccess",l).show().html(c).trigger("create"),i.length?e(".channelAccessContainer",l).show():e(".channelAccessContainer",l).hide(),e("#chkEnableAllChannels",l).checked(n.Policy.EnableAllChannels).checkboxradio("refresh").trigger("change")}function i(l,n,i){var c="";c+='<fieldset data-role="controlgroup">',c+="<legend>"+Globalize.translate("HeaderDevices")+"</legend>";for(var a=0,t=i.length;t>a;a++){var r=i[a],s="device"+a,o=n.Policy.EnableAllDevices||-1!=n.Policy.EnabledDevices.indexOf(r.Id)?' checked="checked"':"";c+='<input class="chkDevice" data-id="'+r.Id+'" type="checkbox" id="'+s+'"'+o+" />",c+='<label for="'+s+'">'+r.Name,c+="<br/><span>"+r.AppName+"</span>",c+="</label>"}c+="</fieldset>",e(".deviceAccess",l).show().html(c).trigger("create"),e("#chkEnableAllDevices",l).checked(n.Policy.EnableAllDevices).checkboxradio("refresh").trigger("change"),n.Policy.IsAdministrator?l.querySelector(".deviceAccessContainer").classList.add("hide"):l.querySelector(".deviceAccessContainer").classList.remove("hide")}function c(c,a,t,r,s,o){e(c).trigger("userloaded",[a]),Dashboard.setPageTitle(a.Name),n(c,a,s),l(c,a,r),i(c,a,o),Dashboard.hideLoadingMsg()}function a(){Dashboard.hideLoadingMsg(),require(["toast"],function(e){e(Globalize.translate("SettingsSaved"))})}function t(l,n){l.Policy.EnableAllFolders=e("#chkEnableAllFolders",n).checked(),l.Policy.EnabledFolders=l.Policy.EnableAllFolders?[]:e(".chkFolder:checked",n).map(function(){return this.getAttribute("data-id")}).get(),l.Policy.EnableAllChannels=e("#chkEnableAllChannels",n).checked(),l.Policy.EnabledChannels=l.Policy.EnableAllChannels?[]:e(".chkChannel:checked",n).map(function(){return this.getAttribute("data-id")}).get(),l.Policy.EnableAllDevices=e("#chkEnableAllDevices",n).checked(),l.Policy.EnabledDevices=l.Policy.EnableAllDevices?[]:e(".chkDevice:checked",n).map(function(){return this.getAttribute("data-id")}).get(),l.Policy.BlockedChannels=null,l.Policy.BlockedMediaFolders=null,ApiClient.updateUserPolicy(l.Id,l.Policy).then(function(){a(n)})}function r(){var l=e(this).parents(".page");Dashboard.showLoadingMsg();var n=getParameterByName("userId");return ApiClient.getUser(n).then(function(e){t(e,l)}),!1}e(document).on("pageinit","#userLibraryAccessPage",function(){var l=this;e("#chkEnableAllDevices",l).on("change",function(){this.checked?e(".deviceAccessListContainer",l).hide():e(".deviceAccessListContainer",l).show()}),e("#chkEnableAllChannels",l).on("change",function(){this.checked?e(".channelAccessListContainer",l).hide():e(".channelAccessListContainer",l).show()}),e("#chkEnableAllFolders",l).on("change",function(){this.checked?e(".folderAccessListContainer",l).hide():e(".folderAccessListContainer",l).show()}),e(".userLibraryAccessForm").off("submit",r).on("submit",r)}).on("pageshow","#userLibraryAccessPage",function(){var l=this;Dashboard.showLoadingMsg();var n,i=getParameterByName("userId");if(i)n=ApiClient.getUser(i);else{var a=e.Deferred();a.resolveWith(null,[{Configuration:{}}]),n=a.promise()}var t=Dashboard.getCurrentUser(),r=ApiClient.getJSON(ApiClient.getUrl("Library/MediaFolders",{IsHidden:!1})),s=ApiClient.getJSON(ApiClient.getUrl("Channels")),o=ApiClient.getJSON(ApiClient.getUrl("Devices",{SupportsPersistentIdentifier:!0}));Promise.all([n,t,r,s,o]).then(function(e){c(l,e[0],e[1],e[2].Items,e[3].Items,e[4].Items)})})});