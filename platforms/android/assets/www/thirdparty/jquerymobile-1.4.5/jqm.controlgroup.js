(function(){if(jQuery.widget){return;}
(function($,undefined){var uuid=0,slice=Array.prototype.slice,_cleanData=$.cleanData;$.cleanData=function(elems){for(var i=0,elem;(elem=elems[i])!=null;i++){try{$(elem).triggerHandler("remove");}catch(e){}}
_cleanData(elems);};$.widget=function(name,base,prototype){var fullName,existingConstructor,constructor,basePrototype,proxiedPrototype={},namespace=name.split(".")[0];name=name.split(".")[1];fullName=namespace+"-"+name;if(!prototype){prototype=base;base=$.Widget;}
$.expr[":"][fullName.toLowerCase()]=function(elem){return!!$.data(elem,fullName);};$[namespace]=$[namespace]||{};existingConstructor=$[namespace][name];constructor=$[namespace][name]=function(options,element){if(!this._createWidget){return new constructor(options,element);}
if(arguments.length){this._createWidget(options,element);}};$.extend(constructor,existingConstructor,{version:prototype.version,_proto:$.extend({},prototype),_childConstructors:[]});basePrototype=new base();basePrototype.options=$.widget.extend({},basePrototype.options);$.each(prototype,function(prop,value){if(!$.isFunction(value)){proxiedPrototype[prop]=value;return;}
proxiedPrototype[prop]=(function(){var _super=function(){return base.prototype[prop].apply(this,arguments);},_superApply=function(args){return base.prototype[prop].apply(this,args);};return function(){var __super=this._super,__superApply=this._superApply,returnValue;this._super=_super;this._superApply=_superApply;returnValue=value.apply(this,arguments);this._super=__super;this._superApply=__superApply;return returnValue;};})();});constructor.prototype=$.widget.extend(basePrototype,{widgetEventPrefix:existingConstructor?(basePrototype.widgetEventPrefix||name):name},proxiedPrototype,{constructor:constructor,namespace:namespace,widgetName:name,widgetFullName:fullName});if(existingConstructor){$.each(existingConstructor._childConstructors,function(i,child){var childPrototype=child.prototype;$.widget(childPrototype.namespace+"."+childPrototype.widgetName,constructor,child._proto);});delete existingConstructor._childConstructors;}else{base._childConstructors.push(constructor);}
$.widget.bridge(name,constructor);return constructor;};$.widget.extend=function(target){var input=slice.call(arguments,1),inputIndex=0,inputLength=input.length,key,value;for(;inputIndex<inputLength;inputIndex++){for(key in input[inputIndex]){value=input[inputIndex][key];if(input[inputIndex].hasOwnProperty(key)&&value!==undefined){if($.isPlainObject(value)){target[key]=$.isPlainObject(target[key])?$.widget.extend({},target[key],value):$.widget.extend({},value);}else{target[key]=value;}}}}
return target;};$.widget.bridge=function(name,object){var fullName=object.prototype.widgetFullName||name;$.fn[name]=function(options){var isMethodCall=typeof options==="string",args=slice.call(arguments,1),returnValue=this;options=!isMethodCall&&args.length?$.widget.extend.apply(null,[options].concat(args)):options;if(isMethodCall){this.each(function(){var methodValue,instance=$.data(this,fullName);if(options==="instance"){returnValue=instance;return false;}
if(!instance){return $.error("cannot call methods on "+name+" prior to initialization; "+"attempted to call method '"+options+"'");}
if(!$.isFunction(instance[options])||options.charAt(0)==="_"){return $.error("no such method '"+options+"' for "+name+" widget instance");}
methodValue=instance[options].apply(instance,args);if(methodValue!==instance&&methodValue!==undefined){returnValue=methodValue&&methodValue.jquery?returnValue.pushStack(methodValue.get()):methodValue;return false;}});}else{this.each(function(){var instance=$.data(this,fullName);if(instance){instance.option(options||{})._init();}else{$.data(this,fullName,new object(options,this));}});}
return returnValue;};};$.Widget=function(){};$.Widget._childConstructors=[];$.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:false,create:null},_createWidget:function(options,element){element=$(element||this.defaultElement||this)[0];this.element=$(element);this.uuid=uuid++;this.eventNamespace="."+this.widgetName+this.uuid;this.options=$.widget.extend({},this.options,this._getCreateOptions(),options);this.bindings=$();this.hoverable=$();this.focusable=$();if(element!==this){$.data(element,this.widgetFullName,this);this._on(true,this.element,{remove:function(event){if(event.target===element){this.destroy();}}});this.document=$(element.style?element.ownerDocument:element.document||element);this.window=$(this.document[0].defaultView||this.document[0].parentWindow);}
this._create();this._trigger("create",null,this._getCreateEventData());this._init();},_getCreateOptions:$.noop,_getCreateEventData:$.noop,_create:$.noop,_init:$.noop,destroy:function(){this._destroy();this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData($.camelCase(this.widgetFullName));this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled");this.bindings.unbind(this.eventNamespace);this.hoverable.removeClass("ui-state-hover");this.focusable.removeClass("ui-state-focus");},_destroy:$.noop,widget:function(){return this.element;},option:function(key,value){var options=key,parts,curOption,i;if(arguments.length===0){return $.widget.extend({},this.options);}
if(typeof key==="string"){options={};parts=key.split(".");key=parts.shift();if(parts.length){curOption=options[key]=$.widget.extend({},this.options[key]);for(i=0;i<parts.length-1;i++){curOption[parts[i]]=curOption[parts[i]]||{};curOption=curOption[parts[i]];}
key=parts.pop();if(value===undefined){return curOption[key]===undefined?null:curOption[key];}
curOption[key]=value;}else{if(value===undefined){return this.options[key]===undefined?null:this.options[key];}
options[key]=value;}}
this._setOptions(options);return this;},_setOptions:function(options){var key;for(key in options){this._setOption(key,options[key]);}
return this;},_setOption:function(key,value){this.options[key]=value;if(key==="disabled"){this.widget().toggleClass(this.widgetFullName+"-disabled",!!value);this.hoverable.removeClass("ui-state-hover");this.focusable.removeClass("ui-state-focus");}
return this;},enable:function(){return this._setOptions({disabled:false});},disable:function(){return this._setOptions({disabled:true});},_on:function(suppressDisabledCheck,element,handlers){var delegateElement,instance=this;if(typeof suppressDisabledCheck!=="boolean"){handlers=element;element=suppressDisabledCheck;suppressDisabledCheck=false;}
if(!handlers){handlers=element;element=this.element;delegateElement=this.widget();}else{element=delegateElement=$(element);this.bindings=this.bindings.add(element);}
$.each(handlers,function(event,handler){function handlerProxy(){if(!suppressDisabledCheck&&(instance.options.disabled===true||$(this).hasClass("ui-state-disabled"))){return;}
return(typeof handler==="string"?instance[handler]:handler).apply(instance,arguments);}
if(typeof handler!=="string"){handlerProxy.guid=handler.guid=handler.guid||handlerProxy.guid||$.guid++;}
var match=event.match(/^(\w+)\s*(.*)$/),eventName=match[1]+instance.eventNamespace,selector=match[2];if(selector){delegateElement.delegate(selector,eventName,handlerProxy);}else{element.bind(eventName,handlerProxy);}});},_off:function(element,eventName){eventName=(eventName||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace;element.unbind(eventName).undelegate(eventName);},_trigger:function(type,event,data){var prop,orig,callback=this.options[type];data=data||{};event=$.Event(event);event.type=(type===this.widgetEventPrefix?type:this.widgetEventPrefix+type).toLowerCase();event.target=this.element[0];orig=event.originalEvent;if(orig){for(prop in orig){if(!(prop in event)){event[prop]=orig[prop];}}}
this.element[0].dispatchEvent(new CustomEvent(event.type,{bubbles:true,detail:{data:data,originalEvent:event}}));return!($.isFunction(callback)&&callback.apply(this.element[0],[event].concat(data))===false||event.isDefaultPrevented());}};})(jQuery);(function($,undefined){$.extend($.Widget.prototype,{_getCreateOptions:function(){var option,value,elem=this.element[0],options={};if(!this.element.data("defaults")){for(option in this.options){value=this.element.data(option);if(value!=null){options[option]=value;}}}
return options;}});})(jQuery);(function($,undefined){var originalWidget=$.widget
$.widget=(function(orig){return function(){var constructor=orig.apply(this,arguments),name=constructor.prototype.widgetName;constructor.initSelector=((constructor.prototype.initSelector!==undefined)?constructor.prototype.initSelector:"*[data-role='"+name+"']:not([data-role='none'])");$.mobile.widgets[name]=constructor;return constructor;};})($.widget);$.extend($.widget,originalWidget);})(jQuery);})();(function($,undefined){var uiScreenHiddenRegex=/\bui-screen-hidden\b/;function noHiddenClass(elements){var index,length=elements.length,result=[];for(index=0;index<length;index++){if(!elements[index].className.match(uiScreenHiddenRegex)){result.push(elements[index]);}}
return $(result);}
$.mobile.behaviors.addFirstLastClasses={_getVisibles:function($els,create){var visibles;if(create){visibles=noHiddenClass($els);}else{visibles=$els.filter(":visible");if(visibles.length===0){visibles=noHiddenClass($els);}}
return visibles;},_addFirstLastClasses:function($els,$visibles,create){$els.removeClass("ui-first-child ui-last-child");$visibles.eq(0).addClass("ui-first-child").end().last().addClass("ui-last-child");if(!create){this.element.trigger("updatelayout");}},_removeFirstLastClasses:function($els){$els.removeClass("ui-first-child ui-last-child");}};})(jQuery);(function($,undefined){function keepNativeSelector(){var keepNative=$.trim("[data-role='none']"),globalValue=$.trim($.mobile.keepNative),optionValue=$.trim("[data-role='none']"),newDefault="",oldDefault=(newDefault===""?optionValue:"");return((keepNative?[keepNative]:[]).concat(newDefault?[newDefault]:[]).concat(oldDefault?[oldDefault]:[]).join(", "));}
$.widget("mobile.controlgroup",$.extend({options:{enhanced:false,theme:null,shadow:false,corners:true,excludeInvisible:true,type:"vertical",mini:false},_create:function(){var elem=this.element,opts=this.options,keepNative=keepNativeSelector();if($.fn.buttonMarkup){this.element.find($.fn.buttonMarkup.initSelector).not(keepNative).buttonMarkup();}
$.each(this._childWidgets,$.proxy(function(number,widgetName){if($.mobile[widgetName]){this.element.find($.mobile[widgetName].initSelector).not(keepNative)[widgetName]();}},this));$.extend(this,{_ui:null,_initialRefresh:true});if(opts.enhanced){this._ui={groupLegend:elem.children(".ui-controlgroup-label").children(),childWrapper:elem.children(".ui-controlgroup-controls")};}else{this._ui=this._enhance();}},_childWidgets:["checkboxradio","selectmenu","button"],_themeClassFromOption:function(value){return(value?(value==="none"?"":"ui-group-theme-"+value):"");},_enhance:function(){var elem=this.element,opts=this.options,ui={groupLegend:elem.children("legend"),childWrapper:elem.addClass("ui-controlgroup "+"ui-controlgroup-"+
(opts.type==="horizontal"?"horizontal":"vertical")+" "+
this._themeClassFromOption(opts.theme)+" "+
(opts.corners?"ui-corner-all ":"")+
(opts.mini?"ui-mini ":"")).wrapInner("<div "+"class='ui-controlgroup-controls "+
(opts.shadow===true?"ui-shadow":"")+"'></div>").children()};if(ui.groupLegend.length>0){$("<div role='heading' class='ui-controlgroup-label'></div>").append(ui.groupLegend).prependTo(elem);}
return ui;},_init:function(){this.refresh();},_setOptions:function(options){var callRefresh,returnValue,elem=this.element;if(options.type!==undefined){elem.removeClass("ui-controlgroup-horizontal ui-controlgroup-vertical").addClass("ui-controlgroup-"+(options.type==="horizontal"?"horizontal":"vertical"));callRefresh=true;}
if(options.theme!==undefined){elem.removeClass(this._themeClassFromOption(this.options.theme)).addClass(this._themeClassFromOption(options.theme));}
if(options.corners!==undefined){elem.toggleClass("ui-corner-all",options.corners);}
if(options.mini!==undefined){elem.toggleClass("ui-mini",options.mini);}
if(options.shadow!==undefined){this._ui.childWrapper.toggleClass("ui-shadow",options.shadow);}
if(options.excludeInvisible!==undefined){this.options.excludeInvisible=options.excludeInvisible;callRefresh=true;}
returnValue=this._super(options);if(callRefresh){this.refresh();}
return returnValue;},container:function(){return this._ui.childWrapper;},refresh:function(){var $el=this.container(),els=$el.find(".ui-btn").not(".ui-slider-handle"),create=this._initialRefresh;if($.mobile.checkboxradio){$el.find(":mobile-checkboxradio").checkboxradio("refresh");}
this._addFirstLastClasses(els,this.options.excludeInvisible?this._getVisibles(els,create):els,create);this._initialRefresh=false;},_destroy:function(){var ui,buttons,opts=this.options;if(opts.enhanced){return this;}
ui=this._ui;buttons=this.element.removeClass("ui-controlgroup "+"ui-controlgroup-horizontal ui-controlgroup-vertical ui-corner-all ui-mini "+
this._themeClassFromOption(opts.theme)).find(".ui-btn").not(".ui-slider-handle");this._removeFirstLastClasses(buttons);ui.groupLegend.unwrap();ui.childWrapper.children().unwrap();}},$.mobile.behaviors.addFirstLastClasses));})(jQuery);