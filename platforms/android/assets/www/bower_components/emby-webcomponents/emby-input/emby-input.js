define(["layoutManager","browser","css!./emby-input"],function(){var e=Object.create(HTMLInputElement.prototype);e.createdCallback=function(){this.id||(this.id="input"+(new Date).getTime())},e.attachedCallback=function(){function e(){this.value?i.classList.remove("blank"):i.classList.add("blank")}if("true"!=this.getAttribute("data-embyinput")){this.setAttribute("data-embyinput","true");var t=this.parentNode,i=this.ownerDocument.createElement("label");i.innerHTML=this.getAttribute("label")||"",i.classList.add("inputLabel"),i.htmlFor=this.id,t.insertBefore(i,this);var n=document.createElement("div");if(n.classList.add("emby-input-selectionbar"),t.insertBefore(n,this.nextSibling),this.addEventListener("focus",function(){e.call(this),i.classList.add("focused")}),this.addEventListener("blur",function(){i.classList.remove("focused")}),this.addEventListener("change",e),this.addEventListener("keypress",e),this.addEventListener("keyup",e),e.call(this),window.IntersectionObserver){var s=new IntersectionObserver(function(t){for(var i=0,n=t.length;n>i;i++){var s=t[i],a=s.intersectionRatio;if(a){var r=s.target;e.call(r)}}},{});s.observe(this),this.observer=s}}},e.detachedCallback=function(){var e=this.observer;e&&(e.disconnect(),this.observer=null)},document.registerElement("emby-input",{prototype:e,"extends":"input"})});