cordova.define("fw-cordova-chromecast.FWChromecast",function(e,n){n.unhandledException=function(e){},n.scanForDevices=function(e){var n=this;return n.receiverAppId=e,"undefined"==typeof e?!1:(n.startedListening||(n.startedListening=!0,n.devices={},cordova.exec(function(e){e=JSON.parse(e),"deviceDidComeOnline"==e.command?(n.devices[e.data.id]=e.data,$(n).trigger("deviceDidComeOnline",e.data)):(delete n.devices[e.data.id],$(n).trigger("deviceDidGoOffline",e.data))},n.unhandledException,"FWChromecast","scanForDevices",[e])),!0)},n.selectDevice=function(e){var n=this;return"undefined"==typeof e?Promise.reject():"undefined"==typeof n.devices[e]?Promise.reject():new Promise(function(o,i){cordova.exec(function(t){t=JSON.parse(t),"deviceConnected"==t.command&&(n.connected=n.devices[e],$(n).trigger("deviceConnected",n.connected),o(t.data)),"failToConnect"==t.command&&($(n).trigger("failToConnect",t.data),i(t.data)),"disconnectWithError"==t.command&&($(n).trigger("disconnectWithError",t.data),i(t.data)),"applicationLaunched"==t.command&&$(n).trigger("applicationLaunched",t.data),"failToConnectToApp"==t.command&&$(n).trigger("failToConnectToApp",t.data),"receiveStatusForApp"==t.command&&$(n).trigger("failToConnect",t.data),"receiveMessage"==t.command&&$(n).trigger("receiveMessage",t.data)},n.unhandledException,"FWChromecast","selectDevice",[e])})},n.launchApplication=function(){var e=this;return new Promise(function(n,o){function i(){$(e).off("applicationLaunched",t),$(e).off("failToConnectToApp",c)}function t(e,o){i(),n(o)}function c(e,n){setTimeout(function(){i(),o(n)},500)}$(e).on("applicationLaunched",t),$(e).on("failToConnectToApp",c),cordova.exec(void 0,e.unhandledException,"FWChromecast","launchApplication",[])})},n.joinApplication=function(){var e=this;return new Promise(function(n,o){function i(){$(e).off("applicationLaunched",t),$(e).off("failToConnectToApp",c)}function t(e,o){i(),n(o)}function c(e,n){setTimeout(function(){i(),o(n)},500)}$(e).on("applicationLaunched",t),$(e).on("failToConnectToApp",c),cordova.exec(void 0,e.unhandledException,"FWChromecast","joinApplication",[])})},n.sendMessage=function(e){var n=this;cordova.exec(void 0,n.unhandledException,"FWChromecast","sendMessage",[e])},n.disconnect=function(){var e=this;return new Promise(function(){cordova.exec(void 0,e.unhandledException,"FWChromecast","disconnect",[])})},n.startMediaChannel=function(){var e=this;return new Promise(function(n){cordova.exec(function(e){e=JSON.parse(e),n()},e.unhandledException,"FWChromecast","startMediaChannel",[])})},n.loadMedia=function(e,n,o,i){return cordova.exec(void 0,this.unhandledException,"FWChromecast","loadMedia",[e,n,o,i]),this},n.playMedia=function(){return cordova.exec(void 0,this.unhandledException,"FWChromecast","playMedia",[]),this},n.pauseMedia=function(){return cordova.exec(void 0,this.unhandledException,"FWChromecast","pauseMedia",[]),this},n.stopMedia=function(){return cordova.exec(void 0,this.unhandledException,"FWChromecast","stopMedia",[]),this},n.muteMedia=function(e){return cordova.exec(void 0,this.unhandledException,"FWChromecast","muteMedia",[e]),this},n.seekMedia=function(e){return cordova.exec(void 0,this.unhandledException,"FWChromecast","seekMedia",[e]),this},n.setVolumeForMedia=function(e){return cordova.exec(void 0,this.unhandledException,"FWChromecast","setVolumeForMedia",[e]),this}});