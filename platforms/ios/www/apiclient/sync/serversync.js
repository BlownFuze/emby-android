!function(e){function n(e){function n(n,o,t){Logger.log("Creating ContentUploader to server: "+n.Id);var i=function(){r(n,o,t)};o=o||{};var c=o.uploadPhotos!==!1;return o.cameraUploadServers&&-1==o.cameraUploadServers.indexOf(n.Id)&&(c=!1),c?void require(["contentuploader"],function(){new MediaBrowser.ContentUploader(e).uploadImages(n).then(function(){Logger.log("ContentUploaded succeeded to server: "+n.Id),i()},function(){Logger.log("ContentUploaded failed to server: "+n.Id),i()})}):void i()}function r(n,r,t){return r.syncOfflineUsers===!1?void o(n,r,t):void require(["offlineusersync"],function(){var i=e.getApiClient(n.Id);(new MediaBrowser.OfflineUserSync).sync(i,n).then(function(){Logger.log("OfflineUserSync succeeded to server: "+n.Id),o(n,r,t)},function(){Logger.log("OfflineUserSync failed to server: "+n.Id),t.reject()})})}function o(n,r,o){require(["mediasync"],function(){var t=e.getApiClient(n.Id);(new MediaBrowser.MediaSync).sync(t,n,r).then(function(){Logger.log("MediaSync succeeded to server: "+n.Id),o.resolve()},function(){Logger.log("MediaSync failed to server: "+n.Id),o.reject()})})}var t=this;t.sync=function(r,o){var t=DeferredBuilder.Deferred();if(!r.AccessToken&&!r.ExchangeToken)return Logger.log("Skipping sync to server "+r.Id+" because there is no saved authentication information."),t.resolve(),t.promise();var i={updateDateLastAccessed:!1,enableWebSocket:!1,reportCapabilities:!1};return e.connectToServer(r,i).then(function(e){e.State==MediaBrowser.ConnectionState.SignedIn?n(r,o,t):(Logger.log("Unable to connect to server id: "+r.Id),t.reject())},function(){Logger.log("Unable to connect to server id: "+r.Id),t.reject()}),t.promise()}}e.MediaBrowser||(e.MediaBrowser={}),e.MediaBrowser.ServerSync=n}(this);